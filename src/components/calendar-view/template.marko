import isToday from 'date-fns/is_today';
import formatTime from '../../utils/format-time';
import {validHours} from '../../utils/consts';

static function numberOfHours(date) {
  return date.getHours() + (date.getMinutes() / 60);
}

static function heightOfBooking(startDate, endDate) {
  return `${((numberOfHours(endDate) - numberOfHours(startDate)) / validHours.length) * 100}%`;
}

static function positionFromTop(startDate) {
  return `${((numberOfHours(startDate) - parseInt(validHours[0], 10)) / validHours.length) * 100}%`;
}

$ const now = new Date();
$ const beforeEndOfDay = isToday(input.date) && now.getHours() < validHours[validHours.length - 1];

<div.calendar>

  <ol.times aria-hidden="true">
    <li.time for(hour in validHours)>${hour}:00</li>
  </ol>

  <dl.bookings if(input.bookings.length)>
    <for(booking in input.bookings)>
      $ const startDate = new Date(booking.start);
      $ const endDate = new Date(booking.end);

      <dt.visuallyhidden>
        <i18n-message key="calendar:until" start=formatTime(startDate) end=formatTime(endDate)/>
      </dt>
      <dd.booking style={height: heightOfBooking(startDate, endDate), top: positionFromTop(startDate)}>
        <i18n-message key="calendar:description" description=booking.description name=booking.name/>
      </dd>
    </for>
  </dl>

  <p.now style={top: positionFromTop(now)} if(beforeEndOfDay)>
    <span.now-time>
      <i18n-message key="calendar:now" hide-start="<span class=\"visuallyhidden\">"
        hide-end="</span>" time=formatTime(now)/>
    </span>
  </p>

</div>
